{"mappings":"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","sources":["public/js/index.js","public/js/login.js","public/js/alerts.js","public/js/appMap.js","public/js/updateSettings.js","public/js/stripe.js","controllers/viewController.js","model/tourModel.js","utils/catchAsync.js","utils/appError.js","model/userModel.js","model/bookingModel.js"],"sourcesContent":["import { login, logout } from \"./login\";\r\nimport { displayMap } from \"./appMap\";\r\nimport { updateSettings } from \"./updateSettings\";\r\nimport { bookTour } from \"./stripe\";\r\n// 5.1) IMPORT THE ALERTS FUNCTION\r\nimport { alerts } from \"../../controllers/viewController\";\r\nimport { showAlert } from \"./alerts\";\r\n\r\nconst map = document.querySelector(\"#map\");\r\nconst loginForm = document.querySelector(\".form--login\");\r\nconst userPaswordForm = document.querySelector(\".form-user-password\");\r\nconst userDataForm = document.querySelector(\".form-user-data\");\r\n\r\nconst bookBtn = document.querySelector(\"#book-tour\");\r\n\r\nif (bookBtn) {\r\n   bookBtn.addEventListener(\"click\", (e) => {\r\n      const { tourId } = e.target.dataset;\r\n      e.target.textContent = \"Processing...\";\r\n      bookTour(tourId);\r\n   });\r\n}\r\n\r\nif (map) {\r\n   const locations = JSON.parse(map.dataset.locations);\r\n   displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n   const email = document.getElementById(\"email\");\r\n   const password = document.getElementById(\"password\");\r\n\r\n   loginForm.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n      login(email.value, password.value);\r\n   });\r\n}\r\n\r\nconst logoutButton = document.querySelector(\".nav__el--logout\");\r\nif (logoutButton) logoutButton.addEventListener(\"click\", logout);\r\n\r\nif (userDataForm)\r\n   userDataForm.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n\r\n      const form = new FormData();\r\n\r\n      form.append(\"name\", document.getElementById(\"name\").value);\r\n      form.append(\"email\", document.getElementById(\"email\").value);\r\n      form.append(\"photo\", document.getElementById(\"photo\").files[0]);\r\n\r\n      updateSettings(form, \"data\");\r\n   });\r\n\r\nif (userPaswordForm)\r\n   userPaswordForm.addEventListener(\"submit\", async (e) => {\r\n      e.preventDefault();\r\n\r\n      document.querySelector(\".btn--save-password\").textContent = \"UPDATING...\";\r\n\r\n      const passwordCurrent = document.getElementById(\"password-current\").value;\r\n      const password = document.getElementById(\"password\").value;\r\n      const passwordConfirmation = document.getElementById(\"password-confirm\").value;\r\n\r\n      await updateSettings({ passwordCurrent, password, passwordConfirmation }, \"password\");\r\n\r\n      document.getElementById(\"password-current\").value = \"\";\r\n      document.getElementById(\"password\").value = \"\";\r\n      document.getElementById(\"password-confirm\").value = \"\";\r\n\r\n      document.querySelector(\".btn--save-password\").textContent = \"SAVE PASSWORD\";\r\n   });\r\n\r\n// 5.1) Check if alert data property is defined.\r\nconst alertMessage = document.querySelector(\"body\").dataset.alert;\r\n// if so, execute the showAlert function with the message\r\nif (alertMessage) showAlert(\"success\", alertMessage);\r\n// finaly we'll update the showAlert function to add a default time for the alert to be displayed.\r\n// goto alerts.js\r\n\r\n// 6) COMPILE, COMMIT AND TEST\r\n","import { showAlert } from \"./alerts\";\r\n\r\nexport const login = (email, password) => {\r\n   const apiParams = {\r\n      method: \"POST\",\r\n      url: `/api/v1/users/login`,\r\n      data: {\r\n         email: email,\r\n         password: password,\r\n      },\r\n   };\r\n\r\n   const timeout = function (timer) {\r\n      return new Promise((resolve, reject) => {\r\n         setTimeout(() => {\r\n            reject(new Error(\"Server took to long to respond!\"));\r\n         }, timer * 1000);\r\n      });\r\n   };\r\n\r\n   const sendDataToAPI = async function (params) {\r\n      try {\r\n         const postData = axios.request(params);\r\n         const response = await Promise.race([postData, timeout(10)]);\r\n         if (response.statusText !== \"OK\") throw new Error(\"Something went wrong!\");\r\n\r\n         if (response.data.status === \"success\") {\r\n            showAlert(\"success\", \"Logged in successfully!\");\r\n\r\n            window.setTimeout(() => {\r\n               location.assign(\"/\");\r\n            }, 1500);\r\n         }\r\n         return response;\r\n      } catch (err) {\r\n         showAlert(\"error\", err.response.data.message);\r\n      }\r\n   };\r\n\r\n   sendDataToAPI(apiParams);\r\n};\r\n\r\nexport const logout = async () => {\r\n   const apiParams = {\r\n      method: \"GET\",\r\n      url: `/api/v1/users/logout`,\r\n   };\r\n\r\n   const timeout = function (timer) {\r\n      return new Promise((resolve, reject) => {\r\n         setTimeout(() => {\r\n            reject(new Error(\"Server took to long to respond!\"));\r\n         }, timer * 1000);\r\n      });\r\n   };\r\n   try {\r\n      const getData = axios.request(apiParams);\r\n      const response = await Promise.race([getData, timeout(10)]);\r\n\r\n      if (response.statusText !== \"OK\") throw new Error(\"Something went wrong! Please try again\");\r\n\r\n      if (response.data.status === \"success\") location.reload(true);\r\n   } catch (err) {\r\n      showAlert(\"error\", err);\r\n   }\r\n};\r\n","export const hideAlert = () => {\r\n   const el = document.querySelector(\".alert\");\r\n   if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\n// 5) ADD A TIME AND A DEFAULT VALUE\r\nexport const showAlert = (type, msg, time = 5) => {\r\n   hideAlert();\r\n   const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n   document.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", markup);\r\n   setTimeout(hideAlert, time * 1000);\r\n};\r\n// return to index.js\r\n","export const displayMap = function (locations) {\r\n   const locationsArr = locations.map((location) => {\r\n      return location.coordinates.reverse();\r\n   });\r\n\r\n   const tourBounds = L.latLngBounds(locationsArr);\r\n   let map = L.map(\"map\", { closePopupOnClick: false, scrollWheelZoom: false, zoomControl: false }).fitBounds(\r\n      tourBounds,\r\n      {\r\n         padding: [200, 100],\r\n      }\r\n   );\r\n   const mapIcon = L.divIcon({ iconSize: [32, 40], className: \"marker\", iconAnchor: [16, 40], popupAnchor: [0, -25] });\r\n   L.control.zoom().setPosition(\"topright\").addTo(map);\r\n\r\n   locationsArr.forEach((location, idx) => {\r\n      L.marker(location, { icon: mapIcon })\r\n         .addTo(map)\r\n         .bindPopup(L.popup({ autoClose: false, className: \"leaflet-popup--custom\" }))\r\n         .setPopupContent(`Day ${locations[idx].day}: ${locations[idx].description}`)\r\n         .openPopup();\r\n   });\r\n\r\n   L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n   }).addTo(map);\r\n};\r\n","import { showAlert } from \"./alerts\";\r\n\r\nexport const updateSettings = async (data, type) => {\r\n   try {\r\n      const url = type === \"data\" ? \"/api/v1/users/updateMe\" : \"/api/v1/users/updateMyPassword\";\r\n\r\n      const response = await axios.request({\r\n         method: \"PATCH\",\r\n         url: url,\r\n         data: data,\r\n      });\r\n\r\n      if (response.data.status === \"success\") {\r\n         showAlert(\"success\", `${type.toUpperCase()} was updated successfuly`);\r\n      }\r\n   } catch (err) {\r\n      showAlert(\"error\", err.response.data.message);\r\n   }\r\n};\r\n","import { showAlert } from \"./alerts\";\r\n\r\nexport const bookTour = async (tourId) => {\r\n   try {\r\n      const stripe = Stripe(\r\n         \"pk_test_51MbORHGd3fb1GXN5BnDRNDG7GZ8iBCKOMh8oJMpMxHjOnvw95UozlfoY0tEdebwcPiaBrgqJ8EcuPAUq0ye4E7f100lfZ6e1OL\"\r\n      );\r\n      const session = await axios.request({\r\n         method: \"GET\",\r\n         url: `/api/v1/bookings/checkout-session/${tourId}`,\r\n      });\r\n\r\n      await stripe.redirectToCheckout({\r\n         sessionId: session.data.session.id,\r\n      });\r\n   } catch (err) {\r\n      console.log(err);\r\n      showAlert(\"error\", err);\r\n   }\r\n};\r\n","const Tour = require(\"../model/tourModel\");\r\nconst catchAsync = require(\"../utils/catchAsync\");\r\nconst AppError = require(\"../utils/appError\");\r\nconst User = require(\"../model/userModel\");\r\nconst Booking = require(\"../model/bookingModel\");\r\n\r\n//4) ADD THE ALERTS MIDDLEWARE\r\n// Here si just set to booking. But we could use this middleware to set up different alert messages by simply chaning the queyry string value\r\nexports.alerts = (req, res, next) => {\r\n   //4.1) Get the alert valeu from the query string comming from Stripe succes_url\r\n   const alert = req.query.alert;\r\n   if (alert === \"booking\") {\r\n      //4.2) Add the alert property to the locals object, which will become avaiable in the template\r\n      res.locals.alert = \"Your booking was successful. Please check you email for details.\";\r\n   }\r\n   next();\r\n};\r\n// now go to index.js to read the data-alert variable in the html and then display it.\r\n// goto index.js\r\n\r\nexports.getOverview = catchAsync(async (req, res, next) => {\r\n   const tours = await Tour.find();\r\n\r\n   res.status(200).render(\"overview\", {\r\n      title: \"All tours\",\r\n      tours: tours,\r\n   });\r\n});\r\n\r\nexports.getTour = catchAsync(async (req, res, next) => {\r\n   const tour = await Tour.findOne({ slug: req.params.slug }).populate({\r\n      path: \"reviews\",\r\n      fields: \"review rating user\",\r\n   });\r\n\r\n   if (!tour) return next(new AppError(\"There is no tour with that name\", 404));\r\n\r\n   res.status(200).render(\"tour\", {\r\n      title: `${tour.name} Tour`,\r\n      tour,\r\n   });\r\n});\r\n\r\nexports.getLoginForm = (req, res) => {\r\n   res.status(200).render(\"login\", {\r\n      title: `Login to your account`,\r\n   });\r\n};\r\n\r\nexports.getAccount = (req, res) => {\r\n   res.status(200).render(\"account\", {\r\n      title: \"Your account\",\r\n   });\r\n};\r\n\r\nexports.getMyTours = catchAsync(async (req, res) => {\r\n   const bookings = await Booking.find({ user: req.user.id });\r\n\r\n   const tourIDs = bookings.map((el) => el.tour);\r\n\r\n   const tours = await Tour.find({ _id: { $in: tourIDs } });\r\n\r\n   res.status(200).render(\"overview\", {\r\n      title: \"My Tours\",\r\n      tours: tours,\r\n   });\r\n});\r\n\r\nexports.updateUserData = catchAsync(async (req, res) => {\r\n   const updatedUser = await User.findByIdAndUpdate(\r\n      req.user.id,\r\n      {\r\n         name: req.body.name,\r\n         email: req.body.email,\r\n      },\r\n      {\r\n         new: true,\r\n         runValidators: true,\r\n      }\r\n   );\r\n\r\n   res.status(200).render(\"account\", {\r\n      title: \"Your accout\",\r\n      user: updatedUser,\r\n   });\r\n});\r\n","const mongoose = require(\"mongoose\");\r\nconst slufigy = require(\"slugify\");\r\n\r\nconst tourSchema = new mongoose.Schema(\r\n   {\r\n      name: {\r\n         type: String,\r\n         required: [true, \"A tour must have a name\"],\r\n         unique: true,\r\n         trim: true,\r\n         minlength: [10, \"A tour name must have less or equal to 10 characters\"],\r\n         maxlength: [40, \"A tour name must have less or equal to 40 characters\"],\r\n      },\r\n      slug: { type: String },\r\n      duration: { type: Number, required: [true, \"A tour must have a duration\"] },\r\n      maxGroupSize: { type: Number, required: [true, \"A tour must have a group size\"] },\r\n      difficulty: {\r\n         type: String,\r\n         required: [true, \"A tour must have a difficulty\"],\r\n         enum: {\r\n            values: [\"easy\", \"medium\", \"difficult\"],\r\n            message: \"Difficulties available are: easy, medium and difficult\",\r\n         },\r\n      },\r\n      ratingsAverage: {\r\n         type: Number,\r\n         default: 4.5,\r\n         min: [1, \"Rating must be equal or above 1\"],\r\n         max: [5, \"Rating must be equal or below 5\"],\r\n\r\n         set: function (val) {\r\n            return Math.round(val * 10) / 10;\r\n         },\r\n      },\r\n      ratingsQuantity: { type: Number, default: 0 },\r\n      price: { type: Number, required: [true, \"A price must have a value defined\"] },\r\n      priceDiscount: {\r\n         type: Number,\r\n         validate: {\r\n            validator: function (val) {\r\n               return val < this.price;\r\n            },\r\n            message: \"Discount ({VALUE}) cannot be higher than the price\",\r\n         },\r\n      },\r\n      summary: { type: String, trim: true, required: [true, \"A tour must have a description\"] },\r\n      description: { type: String, trim: true },\r\n      imageCover: { type: String, required: [true, \"A tour must have a cover image\"] },\r\n      images: [String],\r\n      createdAt: { type: Date, default: Date.now(), select: false },\r\n      startDates: [Date],\r\n      secretTour: {\r\n         type: Boolean,\r\n         default: false,\r\n      },\r\n      startLocation: {\r\n         type: {\r\n            type: String,\r\n            default: \"Point\",\r\n            enum: [\"Point\"],\r\n         },\r\n         coordinates: [Number],\r\n         address: String,\r\n         description: String,\r\n      },\r\n      locations: [\r\n         {\r\n            type: {\r\n               type: String,\r\n               default: \"Point\",\r\n               enum: [\"Point\"],\r\n            },\r\n            coordinates: [Number],\r\n            address: String,\r\n            description: String,\r\n            day: Number,\r\n         },\r\n      ],\r\n      guides: [\r\n         {\r\n            type: mongoose.Schema.ObjectId,\r\n            ref: \"User\",\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      toJSON: { virtuals: true },\r\n      toObject: { virtuals: true },\r\n   }\r\n);\r\n\r\ntourSchema.index({ price: 1, ratingsAverage: -1 });\r\ntourSchema.index({ slug: 1 });\r\ntourSchema.index({ startLocation: \"2dsphere\" });\r\n\r\ntourSchema.virtual(\"durationWeeks\").get(function () {\r\n   return this.duration / 7;\r\n});\r\n\r\ntourSchema.virtual(\"reviews\", {\r\n   ref: \"Review\",\r\n   foreignField: \"tour\",\r\n   localField: \"_id\",\r\n});\r\n\r\ntourSchema.pre(\"save\", function (next) {\r\n   this.slug = slufigy(this.name, { lower: true });\r\n   next();\r\n});\r\n\r\ntourSchema.post(\"save\", function (document, next) {\r\n   // console.log(`${document.name} tour was saved to the database.`);\r\n   next();\r\n});\r\n\r\ntourSchema.pre(/^find/, function (next) {\r\n   this.startTime = Date.now();\r\n   this.find({ secretTour: { $ne: true } });\r\n   next();\r\n});\r\n\r\ntourSchema.pre(/^find/, function (next) {\r\n   this.populate({\r\n      path: \"guides\",\r\n      select: \"-__v -passwordChangedAt\",\r\n   });\r\n   next();\r\n});\r\n\r\ntourSchema.post(/^find/, function (documents, next) {\r\n   // console.log(`Query took ${Date.now() - this.startTime}ms to run`);\r\n   next();\r\n});\r\n\r\ntourSchema.pre(\"aggregate\", function (next) {\r\n   if (this.pipeline().at(0).$geoNear) {\r\n      next();\r\n   } else {\r\n      this.pipeline().unshift({ $match: { secretTour: { $ne: true } } });\r\n      next();\r\n   }\r\n});\r\n\r\nconst Tour = mongoose.model(\"Tour\", tourSchema);\r\n\r\nmodule.exports = Tour;\r\n","module.exports = function (fn) {\r\n   return (req, res, next) => {\r\n      fn(req, res, next).catch(next);\r\n   };\r\n};\r\n","class AppError extends Error {\r\n   constructor(message, statusCode) {\r\n      super(message);\r\n      this.statusCode = statusCode;\r\n      this.status = `${statusCode}`.startsWith(\"4\") ? \"fail\" : \"error\";\r\n      this.isOperational = true;\r\n      Error.captureStackTrace(this, this.constructor);\r\n   }\r\n}\r\n\r\nmodule.exports = AppError;\r\n","const mongoose = require(\"mongoose\");\r\nconst validator = require(\"validator\");\r\nconst bcrypt = require(\"bcryptjs\");\r\nconst crypto = require(\"crypto\");\r\n\r\nconst userSchema = new mongoose.Schema({\r\n   name: {\r\n      type: String,\r\n      required: [true, \"Please tell us your name\"],\r\n      trim: true,\r\n   },\r\n   email: {\r\n      type: String,\r\n      required: [true, \"Please inform your email address\"],\r\n      unique: true,\r\n      lowercase: true,\r\n      trim: true,\r\n      validate: [validator.isEmail, \"Please inform a valid email address\"],\r\n   },\r\n   photo: {\r\n      type: String,\r\n      trim: true,\r\n      default: \"default.jpg\",\r\n   },\r\n   role: {\r\n      type: String,\r\n      enum: {\r\n         values: [\"user\", \"guide\", \"lead-guide\", \"admin\"],\r\n         message: \"The available roles are: user, guide, lead-guide, admin\",\r\n      },\r\n      default: \"user\",\r\n   },\r\n   password: {\r\n      type: String,\r\n      required: [true, \"A user must have a password set\"],\r\n      trim: true,\r\n      minLength: [8, \"Password must have 8 or more characters\"],\r\n      maxLength: [40, \"Password must have less than 40 characters\"],\r\n      validate: [\r\n         validator.isStrongPassword,\r\n         \"Must have a min. of 8 chars, 1 or more lowercase, 1 or more uppercase, 1 number, 1 symbol\",\r\n      ],\r\n      select: false,\r\n   },\r\n   passwordConfirmation: {\r\n      type: String,\r\n      required: [true, \"Please confirm your password\"],\r\n      validate: {\r\n         validator: function (val) {\r\n            return val === this.password;\r\n         },\r\n         message: \"Passwords must match\",\r\n      },\r\n   },\r\n   passwordChangedAt: {\r\n      type: Date,\r\n   },\r\n   passwordResetToken: {\r\n      type: String,\r\n   },\r\n   passwordResetExpiresAt: {\r\n      type: Date,\r\n   },\r\n   active: {\r\n      type: Boolean,\r\n      default: true,\r\n      select: false,\r\n   },\r\n});\r\n\r\nuserSchema.pre(/^find/, function (next) {\r\n   this.find({ active: { $ne: false } });\r\n   next();\r\n});\r\n\r\nuserSchema.pre(\"save\", async function (next) {\r\n   if (!this.isModified(\"password\")) return next();\r\n\r\n   const hash = await bcrypt.hash(this.password, 12);\r\n   this.password = hash;\r\n   this.passwordConfirmation = undefined;\r\n   // console.log(\"userModel.pre: \", this.password);\r\n});\r\n\r\nuserSchema.pre(\"save\", function (next) {\r\n   if (!this.isModified(\"password\") || this.isNew) return next();\r\n\r\n   this.passwordChangedAt = Date.now() - 1000;\r\n   next();\r\n});\r\n\r\n// userSchema.pre(\"save\", function (next) {\r\n//    if (!this.isModified(\"password\")) {\r\n//       return next();\r\n//    }\r\n\r\n//    bcrypt\r\n//       .hash(this.password, 12)\r\n//       .then((hash) => {\r\n//          this.password = hash;\r\n//          this.passwordConfirmation = undefined;\r\n//       })\r\n//       .then(() => {\r\n//          console.log(\"Encryption complete\");\r\n//       })\r\n//       .catch((err) => {\r\n//          console.log(err);\r\n//       })\r\n//       .finally(next);\r\n// });\r\n\r\n// userSchema.pre(\"save\", function (next) {\r\n//    if (!this.isModified(\"password\") || this.isNew) return next();\r\n\r\n//    this.passwordChangedAt = Date.now() - 1000;\r\n//    next();\r\n// });\r\n\r\nuserSchema.methods.correctPassword = async function (candidatePassword, userPassword) {\r\n   const compareResult = await bcrypt.compare(candidatePassword, userPassword);\r\n   return compareResult;\r\n};\r\n\r\nuserSchema.methods.changedPasswordAfter = function (JWTTimestamp) {\r\n   if (this.passwordChangedAt) {\r\n      const changedTimeStamp = parseInt(this.passwordChangedAt.getTime(), 10) / 1000;\r\n\r\n      return JWTTimestamp < changedTimeStamp;\r\n   }\r\n   return false;\r\n};\r\n\r\nuserSchema.methods.createPasswordResetToken = function () {\r\n   const resetToken = crypto.randomBytes(32).toString(\"hex\");\r\n\r\n   this.passwordResetToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\r\n\r\n   this.passwordResetExpiresAt = Date.now() + 10 * 60 * 1000;\r\n\r\n   return resetToken;\r\n};\r\n\r\nconst User = mongoose.model(\"User\", userSchema);\r\nmodule.exports = User;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst bookingSchema = new mongoose.Schema({\r\n   tour: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"Tour\",\r\n      required: [true, \"Booking must belong to a Tour!\"],\r\n   },\r\n   user: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"User\",\r\n      required: [true, \"Booking must belog to a User!\"],\r\n   },\r\n   price: {\r\n      type: Number,\r\n      required: [true, \"Booking must have a price!\"],\r\n   },\r\n   createdAt: {\r\n      type: Date,\r\n      default: Date.now(),\r\n   },\r\n   paid: {\r\n      type: Boolean,\r\n      default: true,\r\n   },\r\n});\r\n\r\nbookingSchema.pre(/^find/, function (next) {\r\n   this.populate(\"user\").populate({\r\n      path: \"tour\",\r\n      select: \"name\",\r\n   });\r\n   next();\r\n});\r\n\r\nconst Booking = new mongoose.model(\"Booking\", bookingSchema);\r\n\r\nmodule.exports = Booking;\r\n"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}